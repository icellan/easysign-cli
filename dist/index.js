#!/usr/bin/env node
"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_regenerator=_interopRequireDefault(require("@babel/runtime/regenerator")),_asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator")),_yargs=_interopRequireDefault(require("yargs")),_yargs2=require("yargs/yargs"),_easysign=require("./easysign"),options=(0,_yargs["default"])((0,_yargs2.hideBin)(process.argv)).usage("Usage: -h <file hash> | -f <local file name>").option("h",{alias:"hash",describe:"File hash of the file you want to check on the blockchain",type:"string"}).option("f",{alias:"fileName",describe:"Name of the file on your local file system that you want to check on the blockchain",type:"string"}).option("j",{alias:"json",describe:"Whether to return only the raw JSON string (without formatting)",type:"boolean"}).argv;(0,_asyncToGenerator2["default"])(_regenerator["default"].mark(function a(){return _regenerator["default"].wrap(function(a){for(;;)switch(a.prev=a.next){case 0:if(!options.hash){a.next=5;break}return a.next=3,(0,_easysign.showHashInfo)(options.hash,options.json);case 3:a.next=11;break;case 5:if(!options.fileName){a.next=10;break}return a.next=8,(0,_easysign.showHashInfoOfFile)(options.fileName,options.json);case 8:a.next=11;break;case 10:console.log("Usage: easysign-cli -h <file hash> | -f <local file name>");case 11:case"end":return a.stop();}},a)}))()["catch"](function(a){console.error(a)});